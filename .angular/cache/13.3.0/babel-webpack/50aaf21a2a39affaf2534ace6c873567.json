{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"@angular/router\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(httpclient, cookieService, route) {\n      this.httpclient = httpclient;\n      this.cookieService = cookieService;\n      this.route = route;\n      this.headers = new HttpHeaders({\n        Authorization: `Bearer ${localStorage.getItem('token')}`\n      });\n    }\n\n    getimage(file) {\n      this.image_file = file;\n    }\n\n    login(user) {\n      return this.httpclient.post(`${environment.apiURL}login?os=android`, user).subscribe(res => {\n        this.logininfo = res;\n        this.token = this.logininfo.Response.access_token;\n        console.log(this.token);\n        localStorage.setItem('token', this.token);\n        this.route.navigateByUrl('/home');\n      });\n    }\n\n    refresh_token() {\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}refresh-token?os=android`, {\n        headers\n      });\n    }\n\n    whologin(user) {\n      this.user = user;\n    }\n\n    getuser() {\n      return this.user;\n    }\n\n    profile(data) {\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}profile?os=android`, data, {\n        headers\n      });\n    }\n\n    changepassword(data) {\n      return this.httpclient.post('http://dalilishop.smartstep-eg.com/api/profile/change_password', data);\n    }\n\n    register(user) {\n      return this.httpclient.post(`${environment.apiURL}register?os=android`, user);\n    }\n\n    update(data) {\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}profile/update?os=android`, data, {\n        headers\n      });\n    } /////////////////////////////////Ads///////////\n\n\n    Ads() {\n      const headers = this.headers;\n      return this.httpclient.get(`${environment.apiURL}profile/products?os=android&page=1`, {\n        headers\n      });\n    } ////////////////////////////////end/////////////////\n    ///////////////////////followers/////////////////////\n\n\n    follwers() {\n      const headers = this.headers;\n      return this.httpclient.get(`${environment.apiURL}profile/followers?os=android`, {\n        headers\n      });\n    }\n\n    follow(id) {\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}user/follow?os=android`, {\n        'follower_id': id\n      }, {\n        headers\n      });\n    } //////////////////////endfollowers///////////////\n\n\n    follwing() {\n      const headers = this.headers;\n      return this.httpclient.get(`${environment.apiURL}profile/followings?os=android`, {\n        headers\n      });\n    }\n\n    showalladdress() {\n      const headers = this.headers;\n      return this.httpclient.get(`${environment.apiURL}user/address?os=android`, {\n        headers\n      });\n    }\n\n    deleteaddress(id) {\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}user/delete_address?os=android`, {\n        'address_id': id\n      }, {\n        headers\n      });\n    }\n\n    cities() {\n      return this.httpclient.get(`${environment.apiURL}cities?os=android&lang=en&country_id=1`);\n    } ///////////////////////myfavourite/////////////\n\n\n    favourite() {\n      const headers = this.headers;\n      return this.httpclient.get(`${environment.apiURL}profile/likes?os=android&page=1`, {\n        headers\n      });\n    } //////////////////endfavourite////////////////\n    ////////////////////////////myprofile///////////\n\n\n    mystores(lang) {\n      const headers = this.headers;\n      return this.httpclient.get(`${environment.apiURL}user/stores?os=android`, {\n        headers\n      });\n    }\n\n    create_store(data) {\n      const fd = new FormData();\n      fd.append('image', this.image_file);\n      console.log(fd);\n      data.image = fd;\n      console.log(data);\n      const headers = this.headers; //     \n\n      return this.httpclient.post(`${environment.apiURL}store/create?os=android`, data, {\n        headers\n      });\n    } /////////////////////////////////////////////\n\n\n    myorders(is_complete) {\n      console.log(is_complete);\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}store/create?os=android`, {\n        'is_complete': is_complete\n      }, {\n        headers\n      });\n    }\n\n    orderdetailes(id) {\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}user/order?os=android`, {\n        'order_id': id\n      }, {\n        headers\n      });\n    }\n\n    myaccount() {\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}profile/account?os=android`, {\n        'country_id': 1\n      }, {\n        headers\n      });\n    }\n\n    offer_like(offer_id) {\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}offers/like?os=android`, {\n        'offer_id': offer_id\n      }, {\n        headers\n      });\n    }\n\n    offer_create(data) {\n      const fd = new FormData();\n      fd.append('image', this.image_file, 'image');\n      data.image = fd.getAll('image');\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}offers/create?os=android`, data, {\n        headers\n      });\n    }\n\n    offers() {\n      //const headers =this.headers\n      return this.httpclient.get(`${environment.apiURL}offers?os=android&country_id=1`);\n    }\n\n    mysales() {\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}seller/orders?os=android&users=[${this.id}]`, {\n        headers\n      });\n    }\n\n    paid_orders(start_d, end_d) {\n      const headers = this.headers;\n      console.log(headers);\n\n      if (start_d || end_d) {\n        let year1 = start_d.slice(0, 4);\n        let mounth1 = start_d.slice(5, 7);\n        let day1 = start_d.slice(8);\n        let year2 = end_d.slice(0, 4);\n        let mounth2 = end_d.slice(5, 7);\n        let day2 = end_d.slice(8);\n        return this.httpclient.post(`${environment.apiURL}seller/paid_orders?os=android`, {\n          'start_date': `${day1}-${mounth1}-${year1}`,\n          'end_date': `${day2}-${mounth2}-${year2}`\n        }, {\n          headers\n        });\n      }\n\n      return this.httpclient.post(`${environment.apiURL}seller/paid_orders?os=android`, {}, {\n        headers\n      });\n    }\n\n    recently_view() {\n      const headers = this.headers;\n      return this.httpclient.get(`${environment.apiURL}recently_view?os=android`, {\n        headers\n      });\n    } ////////////////////////////////user store////////////////////\n\n\n    store_profile(id) {\n      console.log(id);\n      const headers = this.headers;\n      return this.httpclient.get(`${environment.apiURL}store?os=android&store_id=${id}&country_id=1&page=1`, {\n        headers\n      });\n    }\n\n    best_seller(id) {\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}best_seller/stores?os=android`, {\n        'store_id': id\n      }, {\n        headers\n      });\n    }\n\n    followers(id) {\n      return this.httpclient.get(`${environment.apiURL}store/followers?os=android&store_id=${id}`);\n    }\n\n    products(id) {\n      return this.httpclient.get(`${environment.apiURL}store/products?os=android&store_id=${id}&country_id=1&page=1`);\n    }\n\n    create_product(data) {\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}product/create?os=android`, data, {\n        headers\n      });\n    }\n\n    paid_orders_store(id, start_d, end_d) {\n      const headers = this.headers;\n      console.log(headers);\n\n      if (start_d || end_d) {\n        let year1 = start_d.slice(0, 4);\n        let mounth1 = start_d.slice(5, 7);\n        let day1 = start_d.slice(8);\n        let year2 = end_d.slice(0, 4);\n        let mounth2 = end_d.slice(5, 7);\n        let day2 = end_d.slice(8);\n        return this.httpclient.post(`${environment.apiURL}paid_orders/stores?os=android`, {\n          'store_id': id,\n          'start_date': `${day1}-${mounth1}-${year1}`,\n          'end_date': `${day2}-${mounth2}-${year2}`\n        }, {\n          headers\n        });\n      }\n\n      return this.httpclient.post(`${environment.apiURL}paid_orders/stores?os=android`, {\n        'store_id': id\n      }, {\n        headers\n      });\n    }\n\n    unpaid_orders_store(id, start_d, end_d) {\n      const headers = this.headers;\n      console.log(headers);\n\n      if (start_d || end_d) {\n        let year1 = start_d.slice(0, 4);\n        let mounth1 = start_d.slice(5, 7);\n        let day1 = start_d.slice(8);\n        let year2 = end_d.slice(0, 4);\n        let mounth2 = end_d.slice(5, 7);\n        let day2 = end_d.slice(8);\n        return this.httpclient.post(`${environment.apiURL}unpaid_orders/stores?os=android`, {\n          'store_id': id,\n          'start_date': `${day1}-${mounth1}-${year1}`,\n          'end_date': `${day2}-${mounth2}-${year2}`\n        }, {\n          headers\n        });\n      }\n\n      return this.httpclient.post(`${environment.apiURL}unpaid_orders/stores?os=android`, {\n        'store_id': id\n      }, {\n        headers\n      });\n    }\n\n    orders_store(id) {\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}orders/stores?os=android`, {\n        'store_id': id\n      }, {\n        headers\n      });\n    }\n\n    total_sales(id, start_d, end_d) {\n      const headers = this.headers;\n      console.log(headers);\n\n      if (start_d || end_d) {\n        let year1 = start_d.slice(0, 4);\n        let mounth1 = start_d.slice(5, 7);\n        let day1 = start_d.slice(8);\n        let year2 = end_d.slice(0, 4);\n        let mounth2 = end_d.slice(5, 7);\n        let day2 = end_d.slice(8);\n        return this.httpclient.post(`${environment.apiURL}store/sales?os=android`, {\n          'store_id': id,\n          'start_date': `${day1}-${mounth1}-${year1}`,\n          'end_date': `${day2}-${mounth2}-${year2}`\n        }, {\n          headers\n        });\n      }\n\n      return this.httpclient.post(`${environment.apiURL}store/sales?os=android`, {\n        'store_id': id\n      }, {\n        headers\n      });\n    }\n\n    delete_store(id) {\n      const headers = this.headers;\n      return this.httpclient.post(`${environment.apiURL}store/delete?os=android`, {\n        'store_id': id\n      }, {\n        headers\n      });\n    }\n\n    logout() {\n      this.cookieService;\n      console.log(this.token);\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService), i0.ɵɵinject(i3.Router));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}